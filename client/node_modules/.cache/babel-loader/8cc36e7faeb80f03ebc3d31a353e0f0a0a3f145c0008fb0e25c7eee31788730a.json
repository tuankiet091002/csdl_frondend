{"ast":null,"code":"import { FETCH_ALL, DELETE, FETCH_BY_SEARCH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getEmps = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchEmps();\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteEmp = id => async dispatch => {\n  try {\n    await api.deleteEmp(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getEmpsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: data\n    } = await api.fetchEmpsBySearch(searchQuery);\n    console.log('sa');\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","DELETE","FETCH_BY_SEARCH","api","getEmps","dispatch","data","fetchEmps","console","log","type","payload","error","deleteEmp","id","message","getEmpsBySearch","searchQuery","fetchEmpsBySearch"],"sources":["C:/Users/Kiet/Desktop/ST-project/client/src/actions/empsAction.js"],"sourcesContent":["import { FETCH_ALL, DELETE, FETCH_BY_SEARCH } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getEmps = () => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data } = await api.fetchEmps();\r\n\t\tconsole.log(data)\r\n\t\tdispatch({ type: FETCH_ALL, payload: data });\r\n\t\t\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n  \t}\r\n};\r\n\r\nexport const deleteEmp = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tawait api.deleteEmp(id);\r\n\t\tdispatch({ type: DELETE, payload: id });\r\n\t\t\r\n\t} catch (error) {\r\n\t\tconsole.log(error.message);\r\n\t}\r\n};\r\n\r\nexport const getEmpsBySearch = (searchQuery) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data : data } = await api.fetchEmpsBySearch(searchQuery);\r\n\t\tconsole.log('sa')\r\n\t\tdispatch({ type: FETCH_BY_SEARCH, payload: data });\r\n\t} catch (error) {\r\n\t  \tconsole.log(error);\r\n\t}\r\n  };"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,eAAe,QAAQ,0BAA0B;AAC7E,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AAEtC,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACH,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,SAAS,EAAE;IACtCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBD,QAAQ,CAAC;MAAEK,IAAI,EAAEV,SAAS;MAAEW,OAAO,EAAEL;IAAK,CAAC,CAAC;EAE7C,CAAC,CAAC,OAAOM,KAAK,EAAE;IACfJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACjB;AACH,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIC,EAAE,IAAK,MAAOT,QAAQ,IAAK;EACpD,IAAI;IACH,MAAMF,GAAG,CAACU,SAAS,CAACC,EAAE,CAAC;IACvBT,QAAQ,CAAC;MAAEK,IAAI,EAAET,MAAM;MAAEU,OAAO,EAAEG;IAAG,CAAC,CAAC;EAExC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACfJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAACG,OAAO,CAAC;EAC3B;AACD,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,WAAW,IAAK,MAAOZ,QAAQ,IAAK;EACnE,IAAI;IACH,MAAM;MAAEC,IAAI,EAAGA;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACe,iBAAiB,CAACD,WAAW,CAAC;IAChET,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjBJ,QAAQ,CAAC;MAAEK,IAAI,EAAER,eAAe;MAAES,OAAO,EAAEL;IAAK,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACbJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACrB;AACC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}